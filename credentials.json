{
    "installed": {
      "client_id": "your-client-id.apps.googleusercontent.com",
      "project_id": "your-project-id",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_secret": "your-client-secret",
      "redirect_uris": ["http://localhost:3000/oauth2callback"]
    }
  }
  /*You can find the "project_id" and "client_secret" information by accessing your project in the Google Cloud Console. Here’s a step-by-step guide on how to get those details:

Step-by-Step Guide:
Go to the Google Cloud Console:

Open Google Cloud Console.
Create a Project (if you haven’t already):

If you don't already have a project, click on the Select a Project dropdown in the top header, then click New Project.
Give your project a name and click Create.
Enable the Google Sheets API:

In the Google Cloud Console, go to APIs & Services > Library.
Search for Google Sheets API and click on it.
Click Enable to enable the Google Sheets API for your project.
Set up OAuth 2.0 Credentials:

In the left sidebar, go to APIs & Services > Credentials.
Click on Create Credentials and select OAuth 2.0 Client IDs.
If prompted to configure the OAuth consent screen, fill in the required details (e.g., your email and project name).
After that, select Web Application as the application type.
Under Authorized JavaScript origins, add the URL of your website (e.g., http://localhost:3000 for local development).
Under Authorized redirect URIs, add http://localhost:3000/oauth2callback (this URI will be used to handle the OAuth callback).
Download OAuth 2.0 Credentials:

Once the credentials are created, you will see a new OAuth 2.0 client ID listed.
Click on Download to get a .json file. This is the file you’ll use for the credentials.json.*/
